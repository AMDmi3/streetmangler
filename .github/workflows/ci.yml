name: CI
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - { cc: gcc, cxx: g++, features: coverage }
          - { cc: clang, cxx: clang++, features: asan }
    steps:
      - uses: actions/checkout@v2
      - name: Install depends
        run: |
          sudo apt-get install libexpat1-dev libicu-dev
          sudo apt-get install libperl-dev python-dev swig  # for bindings
      - name: Set up environment
        run: |
          echo 'CC=${{ matrix.cc }}' >> $GITHUB_ENV
          echo 'CXX=${{ matrix.cxx }}' >> $GITHUB_ENV
          echo 'CFLAGS=-Werror -Wall -Wextra -pedantic' >> $GITHUB_ENV
          echo 'CXXFLAGS=-Werror -Wall -Wextra -pedantic' >> $GITHUB_ENV
      - name: Set up asan
        if: ${{ contains(matrix.features, 'asan') }}
        run: |
          echo "CFLAGS=$CFLAGS -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize-recover=all" >> $GITHUB_ENV
          echo "CXXFLAGS=$CXXFLAGS -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize-recover=all" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS -fsanitize=address,undefined,integer" >> $GITHUB_ENV
      - name: Set up coverage
        if: ${{ contains(matrix.features, 'coverage') }}
        run: |
          echo "CFLAGS=$CFLAGS -coverage" >> $GITHUB_ENV
          echo "CXXFLAGS=$CXXFLAGS -coverage" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS -coverage" >> $GITHUB_ENV
      - name: Configure
        run: cmake . -DCMAKE_VERBOSE_MAKEFILE=yes -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug
      - name: Build
        run: cmake --build .
      - name: Run tests
        run: ctest -V
      - name: Run dbmaint
        run: env LC_ALL=ru_RU.UTF-8 scripts/dbmaint.sh
      - name: Upload coverage
        if: ${{ contains(matrix.features, 'coverage') }}
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
